# -*- coding: utf-8 -*-
### required - do no delete
def user(): return dict(form=auth())
def download(): return response.download(request,db)
def call(): return service()
### end requires
def index():
    return dict()

def error():
    return dict()
   
   
def maquinas():
    return dict()


def crearCategoria():
    categorias = db().select(db.categorias.ALL)
    form = crud.create(db.categorias)
    return dict(form=form, categorias=categorias)

def crearEvento():
    form = crud.create(db.eventos)
    return dict(form=form)
    
def crearParticipantes():
    form = crud.create(db.participantes)
    return dict(form=form)

def crearEventosParticipantes():
    form = crud.create(db.evetos_participantes)
    return dict(form=form)

def crearUsuarios():
    form = crud.create(db.usuarios)
    return dict(form=form)
    
def crearMaquina():
    form = crud.create(db.maquinas)
    return dict(form=form)
    
def generar_xml(rows):
    idx=range(len(rows.colnames))
    colnames=[item.replace('.','_') for item in rows.colnames]
    records=[]
    for row in rows.response: 
        records.append(TAG['record'](*[TAG[colnames[i]](row[i]) for i in idx]))
    return str(TAG['records'](*records))
    #return str(estrin)
    
def prueba_xml():
    import md5
    codificador = md5.new()
    codificador1 = md5.new()
    codificador1.update(generar_xml(db().select(db.participantes.ALL)))
    response.headers['Content-Type']='application/xml'
    #a = generar_xml(db().select(db.participantes.ALL));
    codificador.update(generar_xml(db().select(db.participantes.ALL)))
    #return generar_xml(db().select(db.participantes.ALL))
    return dict(var=codificador.hexdigest(), var1=codificador1.hexdigest())
    
    
def eliminarCategoria():
    form = crud.delete(db.categorias)
    return dict(form=form)

def actualizarCategoria():
    form = crud.update(db.categorias,7)
    return dict(form=form)


def mostrarCategoria():
    categorias= db().select(db.categorias.ALL, orderby=db.categorias.id)
    return dict(categorias=categorias)
    
def showCategoria():
    form = crud.update(db.categorias,request.args(0),next=URL('mostrarCategoria'))
